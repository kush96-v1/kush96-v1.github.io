{"version":3,"sources":["../../../../react-tutorial/src/Table.js","../../../../react-tutorial/src/Form.js","../../../../react-tutorial/src/App.js","../../../../react-tutorial/src/index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","App","characters","filter","character","i","concat","toConsumableArray","className","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAwCMA,EAAc,WAChB,OACIC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,uBAMVC,EAAY,SAAAC,GAEd,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAKC,GACvC,OACIT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GACLT,EAAAC,EAAAC,cAAA,UAAKM,EAAIG,MACTX,EAAAC,EAAAC,cAAA,UAAKM,EAAII,KACTZ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,cAMhB,OAAOT,EAAAC,EAAAC,cAAA,aAAQG,IAsBJU,mLAhBF,IAAAC,EACsCC,KAAKb,MAAxCE,EADHU,EACGV,cAAeQ,EADlBE,EACkBF,gBACvB,OACId,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,CAAWb,cAAeA,EAAeQ,gBAAiBA,YANtDM,oBCjBLC,cAnDX,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMb,KAUVwB,aAAe,SAAAC,GAAS,IAAAC,EACID,EAAME,OAAtBpB,EADYmB,EACZnB,KAAMqB,EADMF,EACNE,MAEdV,EAAKW,SAALV,OAAAW,EAAA,EAAAX,CAAA,GAAiBZ,EAAOqB,KAdTV,EAiBnBa,WAAa,WACTb,EAAKlB,MAAMgC,aAAad,EAAKe,OAC7Bf,EAAKW,SAASX,EAAKgB,eAhBnBhB,EAAKgB,aAAe,CAChB3B,KAAM,GACNC,IAAK,IAGTU,EAAKe,MAAQf,EAAKgB,aARHhB,wEAwBV,IAAAiB,EACiBtB,KAAKoB,MAAnB1B,EADH4B,EACG5B,KAAMC,EADT2B,EACS3B,IACd,OACIZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,OACLqB,MAAOrB,EACP8B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,MACLqB,MAAOpB,EACP6B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,SAASR,MAAM,SAASnB,QAASI,KAAKkB,qBAzC/Cf,aC0CJsB,6MAtCXL,MAAQ,CACJM,WAAY,MAIhB7B,gBAAkB,SAAAL,GAAS,IACfkC,EAAerB,EAAKe,MAApBM,WAERrB,EAAKW,SAAS,CACVU,WAAYA,EAAWC,OAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMrC,SAKzB2B,aAAe,SAAAS,GACXvB,EAAKW,SAAS,CAAEU,WAAU,GAAAI,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAMD,EAAKe,MAAMM,YAAjB,CAA6BE,+EAIlD,IAKGF,EAAe1B,KAAKoB,MAApBM,WACR,OACI3C,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,aAEXjD,EAAAC,EAAAC,cAACgD,EAAD,CAAO5C,cAAeqC,EAAY7B,gBAAiBG,KAAKH,kBACxDd,EAAAC,EAAAC,cAACiD,EAAD,CAAMf,aAAcnB,KAAKmB,uBAhCvBhB,mBCKlBgC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.847d12fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// react has 2 types of components class components and simple component(function)\n\n// as class\n// class Table extends Component{\n//     render(){\n//         return(\n//             <table>\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Job</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               <tr>\n//                 <td>Charlie</td>\n//                 <td>Janitor</td>\n//               </tr>\n//               <tr>\n//                 <td>Mac</td>\n//                 <td>Bouncer</td>\n//               </tr>\n//               <tr>\n//                 <td>Dee</td>\n//                 <td>Aspiring actress</td>\n//               </tr>\n//               <tr>\n//                 <td>Dennis</td>\n//                 <td>Bartender</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         )\n//     }\n\n// }\n\n\n// As simple components header and body is seperated\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    // keys,index are a react thing using indexs as keys is not recommended becsue the order can of items can change\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\n// now we mix simple and class components\n// jsx rules can only have one root node in return + render +return must be there in class component\nclass Table extends Component {\n    render() {\n        const { characterData, removeCharacter } = this.props\n        return (\n            <table>\n                <TableHeader/>\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n            </table>\n        )\n    }\n\n}\n\n// without mixing note if return is a one liner no need paras\n// const SimpleComponent = () => {\n//     return <div>Example</div>\n//   }\nexport default Table\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({ [name]: value })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n\n\n    render() {\n        const { name, job } = this.state\n        return (\n            <form>\n                <label>Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label>Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n\n            </form>\n            \n        )\n    }\n\n\n\n}\n\nexport default Form\n","import React, { Component } from \"react\"\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    // state\n    state = {\n        characters: []\n    }\n\n    // mutators\n    removeCharacter = index => {\n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = character => {\n        this.setState({ characters: [...this.state.characters, character] })\n      }\n\n    // render \n    render() {\n        // you can return js vars that in jsx too in render using {varname}\n        // const name = 'Kushallll'\n        // const heading = <h1>Hello, {name}</h1>\n\n        const { characters } = this.state\n        return (\n            <div className=\"container\">\n                {/* we created a tabel component and imported it into App.js */}\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// switch below to ./App to use app.js ( main app) instead of api example\nimport App from './App'\nimport './index.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}